#!/bin/bash
ICON=/tmp/xkcd #might be png or jpg, identify from imagemagick will know
TMPBG=/tmp/screen.png

PIXELATE="-scale 5% -scale 2000%"
BLUR="-scale 5% -blur 0x2 -filter lanczos -resize 2000%"
FILTER=$BLUR

function download_xkcd {
	NUMCOMICS=$(curl -sL "http://xkcd.com/info.0.json" | grep -oP '(?<=num": )([^,]*)')
	COMIC=404
	until [[ "$COMIC" -ne "404" ]]; do
		COMIC=$((1 + RANDOM % $NUMCOMICS))
	done
	URL=$(curl -sL "http://xkcd.com/$COMIC/info.0.json" | grep -oP '(?<=img": ")([^"]*)' | tr -d '\\')
	curl -sL "$URL" -o $ICON
}

function getScreenshot {
	if [[ $(type -P "scrot") ]]; then 
		scrot $TMPBG;               #scrot is faster
	else 
		import -window root $TMPBG; #from the imagemagick suite
	fi
	convert $TMPBG $FILTER $TMPBG
}

function embedComic {
	#lockscreen image info
	C_C=($(identify -format "%w %h" $ICON))
	SCREENS=$(xrandr --query | grep ' connected' | grep -o '[0-9][0-9]*x[0-9][0-9]*[^ ]*')
	if [[ -f "$ICON" ]]; then
		COMM=""
		for RES in $SCREENS; do
			# monitor position/offset
			C_S=(${RES//[x+]/ })
			PX=$((${C_S[2]} + ${C_S[0]} / 2 - ${C_C[0]} / 2))
			PY=$((${C_S[3]} + ${C_S[1]} / 2 - ${C_C[1]} / 2))
			if [[ "$COMM" == "" ]]; then
				COMM="convert $TMPBG \( $ICON -repage +$PX+$PY \) "
			else
				COMM="${COMM}\( +clone -repage +$PX+$PY \) " #avoid extra file reads
			fi
		done
		COMM="${COMM}-layers flatten $TMPBG"
		eval $COMM
	fi
}

function cleanup {
	rm $TMPBG
	#rm $ICON
}

if [[ ! -e $ICON ]]; then
	download_xkcd &
fi
getScreenshot &
wait
embedComic
i3lock -u -i $TMPBG -I 5 -d &
download_xkcd &
wait
cleanup
